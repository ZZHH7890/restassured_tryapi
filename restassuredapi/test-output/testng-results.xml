<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="26" ignored="1" total="80" passed="53">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="19917" started-at="2017-09-27T16:45:25Z" finished-at="2017-09-27T16:45:45Z">
    <groups>
      <group name="P1">
        <method signature="ZzkgApiCases.addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" class="apitestcases.ZzkgApiCases"/>
      </group> <!-- P1 -->
    </groups>
    <test name="Default test" duration-ms="19917" started-at="2017-09-27T16:45:25Z" finished-at="2017-09-27T16:45:45Z">
      <class name="apitestcases.ZzkgApiCases">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeClass" is-config="true" duration-ms="2792" started-at="2017-09-28T00:45:25Z" finished-at="2017-09-28T00:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="141" started-at="2017-09-28T00:45:28Z" finished-at="2017-09-28T00:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="271" started-at="2017-09-28T00:45:28Z" data-provider="address" finished-at="2017-09-28T00:45:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷134","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":256}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="60" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="78" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="163" started-at="2017-09-28T00:45:29Z" data-provider="address" finished-at="2017-09-28T00:45:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷135","phone":13514672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":257}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:29Z" data-provider="address" finished-at="2017-09-28T00:45:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷136","phone":13614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":258}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:29Z" finished-at="2017-09-28T00:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="151" started-at="2017-09-28T00:45:29Z" data-provider="address" finished-at="2017-09-28T00:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷137","phone":13714672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":259}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="153" started-at="2017-09-28T00:45:30Z" data-provider="address" finished-at="2017-09-28T00:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷138","phone":13814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":260}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="64" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:30Z" data-provider="address" finished-at="2017-09-28T00:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷139","phone":13914672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":261}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="141" started-at="2017-09-28T00:45:30Z" data-provider="address" finished-at="2017-09-28T00:45:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷150","phone":15014672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":262}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="76" started-at="2017-09-28T00:45:30Z" finished-at="2017-09-28T00:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="107" started-at="2017-09-28T00:45:30Z" data-provider="address" finished-at="2017-09-28T00:45:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷151","phone":15114672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":263}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="118" started-at="2017-09-28T00:45:31Z" data-provider="address" finished-at="2017-09-28T00:45:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷152","phone":15214672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":264}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="78" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="140" started-at="2017-09-28T00:45:31Z" data-provider="address" finished-at="2017-09-28T00:45:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷157","phone":15714672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":265}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:31Z" data-provider="address" finished-at="2017-09-28T00:45:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷158","phone":15814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":266}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2017-09-28T00:45:31Z" finished-at="2017-09-28T00:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="105" started-at="2017-09-28T00:45:31Z" data-provider="address" finished-at="2017-09-28T00:45:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷159","phone":15914672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":267}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:32Z" data-provider="address" finished-at="2017-09-28T00:45:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷182","phone":18214672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":268}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="141" started-at="2017-09-28T00:45:32Z" data-provider="address" finished-at="2017-09-28T00:45:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷183","phone":18314672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":269}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="64" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:32Z" data-provider="address" finished-at="2017-09-28T00:45:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷184","phone":18414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":270}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="160" started-at="2017-09-28T00:45:32Z" data-provider="address" finished-at="2017-09-28T00:45:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷187","phone":18714672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":271}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="67" started-at="2017-09-28T00:45:32Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:33Z" data-provider="address" finished-at="2017-09-28T00:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷188","phone":18814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":272}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:33Z" data-provider="address" finished-at="2017-09-28T00:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷147","phone":14714672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":273}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:33Z" data-provider="address" finished-at="2017-09-28T00:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷178","phone":17814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":274}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="157" started-at="2017-09-28T00:45:33Z" data-provider="address" finished-at="2017-09-28T00:45:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷130","phone":13014672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":275}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="61" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2017-09-28T00:45:33Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="126" started-at="2017-09-28T00:45:34Z" data-provider="address" finished-at="2017-09-28T00:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷131","phone":13114672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":276}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:34Z" data-provider="address" finished-at="2017-09-28T00:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷132","phone":13214672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":277}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:34Z" data-provider="address" finished-at="2017-09-28T00:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷155","phone":15514672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":278}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="48" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:34Z" data-provider="address" finished-at="2017-09-28T00:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷156","phone":15614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":279}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="59" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="40" started-at="2017-09-28T00:45:34Z" finished-at="2017-09-28T00:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="118" started-at="2017-09-28T00:45:34Z" data-provider="address" finished-at="2017-09-28T00:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷185","phone":18514672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":280}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="103" started-at="2017-09-28T00:45:35Z" data-provider="address" finished-at="2017-09-28T00:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷186","phone":18614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":281}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:35Z" data-provider="address" finished-at="2017-09-28T00:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷145","phone":14514672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":282}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:35Z" data-provider="address" finished-at="2017-09-28T00:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷175","phone":17514672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":283}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="97" started-at="2017-09-28T00:45:35Z" data-provider="address" finished-at="2017-09-28T00:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷176","phone":17614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":284}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:35Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="97" started-at="2017-09-28T00:45:36Z" data-provider="address" finished-at="2017-09-28T00:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷133","phone":13314672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":285}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="119" started-at="2017-09-28T00:45:36Z" data-provider="address" finished-at="2017-09-28T00:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷153","phone":15314672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":286}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:36Z" data-provider="address" finished-at="2017-09-28T00:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷180","phone":18014672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":287}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:36Z" data-provider="address" finished-at="2017-09-28T00:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷181","phone":18114672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":288}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="117" started-at="2017-09-28T00:45:36Z" data-provider="address" finished-at="2017-09-28T00:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷189","phone":18914672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":289}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:36Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="116" started-at="2017-09-28T00:45:37Z" data-provider="address" finished-at="2017-09-28T00:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷177","phone":17714672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":290}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="34" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:37Z" data-provider="address" finished-at="2017-09-28T00:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷173","phone":17314672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":291}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="52" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:37Z" data-provider="address" finished-at="2017-09-28T00:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷170","phone":17014672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":292}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:37Z" data-provider="address" finished-at="2017-09-28T00:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷171","phone":17114672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":293}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="55" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="127" started-at="2017-09-28T00:45:37Z" data-provider="address" finished-at="2017-09-28T00:45:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷198","phone":19814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":294}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:37Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="43" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="117" started-at="2017-09-28T00:45:38Z" data-provider="address" finished-at="2017-09-28T00:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷199","phone":19914672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":295}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:38Z" data-provider="address" finished-at="2017-09-28T00:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷166","phone":16614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":296}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:38Z" data-provider="address" finished-at="2017-09-28T00:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷146","phone":14614672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":297}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="44" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:38Z" data-provider="address" finished-at="2017-09-28T00:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷148","phone":14814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":298}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="51" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="78" started-at="2017-09-28T00:45:38Z" data-provider="address" finished-at="2017-09-28T00:45:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"","phone":14814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":298}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[收货人不能为空]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人不能为空
  Actual: 联系人不能为空
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人不能为空
  Actual: 联系人不能为空

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:38Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="86" started-at="2017-09-28T00:45:39Z" data-provider="address" finished-at="2017-09-28T00:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"   ","phone":14814672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":299}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[收货人不能全为空字符]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人不能全为空字符
  Actual: 联系人只能由中文、字母或数字组成
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人不能全为空字符
  Actual: 联系人只能由中文、字母或数字组成

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="78" started-at="2017-09-28T00:45:39Z" data-provider="address" finished-at="2017-09-28T00:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"*？&%@","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":256}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[收货人只能是汉字字母数字组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人只能是汉字字母数字组成
  Actual: 联系人只能由中文、字母或数字组成
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人只能是汉字字母数字组成
  Actual: 联系人只能由中文、字母或数字组成

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:39Z" data-provider="address" finished-at="2017-09-28T00:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"壹贰叁肆伍陆柒","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":257}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[收货人最大只支持6个汉字]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人最大只支持6个汉字
  Actual: 联系人字数太多
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人最大只支持6个汉字
  Actual: 联系人字数太多

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="63" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="78" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="94" started-at="2017-09-28T00:45:39Z" data-provider="address" finished-at="2017-09-28T00:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"aaaaaaaaaa19","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":258}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[收货人最大只支持12个数字和字母]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人最大只支持12个数字和字母
  Actual: 联系人字数太多
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 收货人最大只支持12个数字和字母
  Actual: 联系人字数太多

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="119" started-at="2017-09-28T00:45:39Z" data-provider="address" finished-at="2017-09-28T00:45:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":0,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":259}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:39Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="124" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":260}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="62" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="78" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":ABC,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":261}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="89" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":262}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="78" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":   ,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":263}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 成功
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="87" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":134146727755,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":264}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="42" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:40Z" finished-at="2017-09-28T00:45:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="94" started-at="2017-09-28T00:45:40Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":1341467277,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":265}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="79" started-at="2017-09-28T00:45:41Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":137$46&27@6,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":266}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="79" started-at="2017-09-28T00:45:41Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13a14b72z7,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":267}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="93" started-at="2017-09-28T00:45:41Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13,14!72?7,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":268}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="93" started-at="2017-09-28T00:45:41Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":1371467 776,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":269}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="86" started-at="2017-09-28T00:45:41Z" data-provider="address" finished-at="2017-09-28T00:45:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":270}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="33" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:41Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="79" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":   ,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":271}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[手机号码格式错误]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 手机号码格式错误
  Actual: 服务器出了点小问题，请稍候重试

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="90" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"","addressBuildingId":272}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[请选择楼栋单元]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 请选择楼栋单元
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 请选择楼栋单元
  Actual: 成功

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"1123Az","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"   ","addressBuildingId":273}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[请选择楼栋单元]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 请选择楼栋单元
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 请选择楼栋单元
  Actual: 成功

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="48" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="98" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"abc","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":274}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"ABC","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":275}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="81" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="33" started-at="2017-09-28T00:45:42Z" finished-at="2017-09-28T00:45:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="124" started-at="2017-09-28T00:45:42Z" data-provider="address" finished-at="2017-09-28T00:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"aaAA","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":276}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="57" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="121" started-at="2017-09-28T00:45:43Z" data-provider="address" finished-at="2017-09-28T00:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"903","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":277}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="125" started-at="2017-09-28T00:45:43Z" data-provider="address" finished-at="2017-09-28T00:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"903A","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":278}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:43Z" data-provider="address" finished-at="2017-09-28T00:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"903a","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":279}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[成功]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="79" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="53" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="76" started-at="2017-09-28T00:45:43Z" data-provider="address" finished-at="2017-09-28T00:45:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":280}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 请填写单元和门牌
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 请填写单元和门牌

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:43Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="73" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"   ","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":281}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 请填写单元和门牌
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 请填写单元和门牌

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="46" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="106" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"12 34","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":282}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"AB CD","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":283}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"12.34","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":284}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"ab.cd","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":285}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="50" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="35" started-at="2017-09-28T00:45:44Z" finished-at="2017-09-28T00:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:44Z" data-provider="address" finished-at="2017-09-28T00:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"AB@CD","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":286}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="34" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="45" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="118" started-at="2017-09-28T00:45:45Z" data-provider="address" finished-at="2017-09-28T00:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"12+34","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":287}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="110" started-at="2017-09-28T00:45:45Z" data-provider="address" finished-at="2017-09-28T00:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"12*34","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":288}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号只能由数字和字母组成]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号只能由数字和字母组成
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="beforeMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addAddress(java.lang.String, java.lang.String)[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="addAddress" duration-ms="109" started-at="2017-09-28T00:45:45Z" data-provider="address" finished-at="2017-09-28T00:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"contact":"大爷","phone":13414672775,"gender":1,"regionId":813395,"latitude":22.408965,"longitude":113.826119,"room1":"12345678910","village":"东角山","city1":"深圳","addressNaviId":18039,"building":"自动化测试楼栋C栋（勿删）","addressBuildingId":289}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[门牌号最大长度为10]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号最大长度为10
  Actual: 成功
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path msg doesn't match.
Expected: 门牌号最大长度为10
  Actual: 成功

	at sun.reflect.GeneratedConstructorAccessor118.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
	at sun.reflect.GeneratedMethodAccessor143.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at apitestcases.ZzkgApiCases.addAddress(ZzkgApiCases.java:36)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterMethod" is-config="true" duration-ms="47" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:apitestcases.ZzkgApiCases@55f3ddb1]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-09-28T00:45:45Z" finished-at="2017-09-28T00:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- apitestcases.ZzkgApiCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
