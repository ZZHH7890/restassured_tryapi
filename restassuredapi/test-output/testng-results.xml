<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="309" started-at="2017-11-10T10:02:56Z" finished-at="2017-11-10T10:02:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="309" started-at="2017-11-10T10:02:56Z" finished-at="2017-11-10T10:02:56Z">
      <class name="restassuredapi.TryExtentreport">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="beforeSuite" is-config="true" duration-ms="123" started-at="2017-11-10T18:02:56Z" finished-at="2017-11-10T18:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="intentionalFailure()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="intentionalFailure" duration-ms="6" started-at="2017-11-10T18:02:56Z" finished-at="2017-11-10T18:02:56Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[intentional failure]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: intentional failure
	at restassuredapi.TryExtentreport.intentionalFailure(TryExtentreport.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intentionalFailure -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="afterMethod" is-config="true" duration-ms="249" started-at="2017-11-10T18:02:56Z" finished-at="2017-11-10T18:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=intentionalFailure status=FAILURE method=TryExtentreport.intentionalFailure()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="passTest" duration-ms="3" started-at="2017-11-10T18:02:56Z" finished-at="2017-11-10T18:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="afterMethod" is-config="true" duration-ms="31" started-at="2017-11-10T18:02:56Z" finished-at="2017-11-10T18:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=TryExtentreport.passTest()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:restassuredapi.TryExtentreport@d8355a8]" name="afterSuite" is-config="true" duration-ms="30" started-at="2017-11-10T18:02:57Z" finished-at="2017-11-10T18:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- restassuredapi.TryExtentreport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
